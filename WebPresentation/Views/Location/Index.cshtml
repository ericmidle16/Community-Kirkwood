<!--
///<summary>
/// Creator: Chase Hannen 
/// Created: 2025-04-24  
/// Summary: Created view for the locations

/// Last Updated By: Skyann
/// Last Updated: 2025-04-27
/// What Was Changed: Styling added.
/// Last Updated By: Dat Tran
/// Last Updated: 2025-04-27
/// What Was Changed: Sweet Alerts for adding, editing, and deleting a location. 
/// </summary>
-->
@model IEnumerable<DataDomain.Location>

@{
    ViewData["Title"] = "Locations";
}

<h1 class="text-center">All Locations</h1>
@if(TempData["SuccessMessage"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            if (!sessionStorage.getItem('sweetAlertAddLocationShown')) {
                Swal.fire({
                    icon: 'success',
                    title: 'Done',
                    text: '@TempData["SuccessMessage"]'
                });
                sessionStorage.setItem('sweetAlertAddLocationShown', 'true');
            }
        });
    </script>
    @* Remove the message so it doesn’t persist on refresh *@
    TempData.Remove("SuccessMessage");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertAddLocationShown');
    </script>
}
@if(TempData["UpdateSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            if(!sessionStorage.getItem('sweetAlertUpdateLocationShown')) {
            Swal.fire({
                icon: 'success',
                title: 'Updated',
                text: '@TempData["UpdateSuccess"]'
                });
                sessionStorage.setItem('sweetAlertUpdateLocationShown', 'true');
            }
        });
    </script>

    TempData.Remove("UpdateSuccess");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertUpdateLocationShown');
    </script>
}
@if(TempData["DeleteSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            if(!sessionStorage.getItem('sweetAlertDeleteLocationShown')) {
            Swal.fire({
                icon: 'success',
                title: 'Deleted!',
                text: '@TempData["DeleteSuccess"]'
                });
                sessionStorage.setItem('sweetAlertDeleteLocationShown', 'true');
            }
        });
    </script>

    TempData.Remove("DeleteSuccess");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertDeleteLocationShown');
    </script>
}
<p>
    <a asp-action="Create" class="btn btn-success btn" >Create New Location</a>
</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th class="header">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Zip)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th class="header"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-center gap-2">
                    <a href="@Url.Action("Edit", new { id = item.LocationID })" class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Details", new { id = item.LocationID })" class="btn btn-primary btn-sm">Details</a>
                    <a href="@Url.Action("Delete", new { id = item.LocationID })" class="btn btn-danger btn-sm">Delete</a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>
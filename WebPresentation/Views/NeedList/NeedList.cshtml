<!--
///<summary>
/// Creator:  Dat Tran 
/// Created:  2025-03-27 
/// Summary:  This class is the View for the Need List web form.

/// Last Updated By: Skyann
/// Last Updated: 2025-04-27
/// What Was Changed: Styling added.
/// </summary>
-->
@model IEnumerable<DataDomain.NeedList>

@{
    ViewData["Title"] = "Need List";
    int projectID = ViewBag.ProjectID;
}

<h1 class="text-center">Items Needed</h1>

@*
    Creator: Dat Tran
    Created: 2025-04-25
    Summary: Sweet Alerts for Need List CRUD functionality.
    Last updated by:
    Last updated: 
    Changes: 
*@
@if (TempData["AddItemSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            if(!sessionStorage.getItem('sweetAlertAddItemShown')){
            Swal.fire({
                icon: 'success',
                title: 'Done',
                text: '@TempData["AddItemSuccess"]'
                });
                sessionStorage.setItem('sweetAlertAddItemShown', 'true');
            }
        });
    </script>
    @* Remove the message so it doesn’t persist on refresh *@
    TempData.Remove("AddItemSuccess");

}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertAddItemShown');
    </script>
}
@if (TempData["SuccessMessage"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            if (!sessionStorage.getItem('sweetAlertUpdateItemShown')) {
                Swal.fire({
                    icon: 'success',
                    title: 'Done',
                    text: '@TempData["SuccessMessage"]'
                });
                sessionStorage.setItem('sweetAlertUpdateItemShown', 'true');
            }
        });
    </script>
    @* Remove the message so it doesn’t persist on refresh *@
    TempData.Remove("SuccessMessage");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertUpdateItemShown');
    </script>
}
@if (TempData["DeleteSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            if(!sessionStorage.getItem('sweetAlertDeleteItemShown')) {
            Swal.fire({
                icon: 'success',
                title: 'Deleted!',
                text: '@TempData["DeleteSuccess"]'
                });
                sessionStorage.setItem('sweetAlertDeleteItemShown', 'true');
            }
        });
    </script>

    TempData.Remove("DeleteSuccess");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertDeleteItemShown');
    </script>
}




<p>
   
    <a asp-action="AddItem" asp-route-projectID=@projectID class="btn btn-success ml-2">Create New Item</a>
</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th hidden>
                @Html.DisplayNameFor(model => model.ItemID)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.ProjectID)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th hidden>
                Is Obtained
            </th>
            <th class="header"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td hidden>
                @Html.DisplayFor(modelItem => item.ItemID)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.ProjectID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.IsObtained)
            </td>
            <td>
                <a asp-action="Update" asp-route-id="@item.ItemID" class="btn btn-warning ml-2">Edit</a>
                @* @Html.ActionLink("Details", "Details", new { id=item.ItemID }) | *@
                @* @Html.ActionLink("Delete", "Delete", new { id=item.ItemID }) *@
                
                   
            </td>
            
        </tr>
}
    </tbody>
</table>

<!--
    /// <summary>
    /// Creator:  Stan Anderson
    /// Created:  2025-04-16
    /// Summary:  This shows all the volunteers and their task for an event

    /// Last Updated By: Skyann
    /// Last Updated: 2025-04-27
    /// What Was Changed: Styling added.

    /// Last Updated By: Dat Tran
    /// Last Updated: 2025-04-27
    /// What Was Changed: Sweet Alerts added. 
    /// </summary>
-->

@model IEnumerable<DataDomain.TaskAssignedViewModel>

@{
    ViewData["Title"] = "Volunteers Assigned to Event";
    int eventID = ViewBag.EventID;
    string eventName = ViewBag.EventName;
    int projectID = ViewBag.ProjectID;
}

<h1 class="text-center"> Volunteers Assigned to @eventName (@Model.Count())</h1>
@if (TempData["AssignSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            if(!sessionStorage.getItem('sweetAlertAssignTaskShown')){
            Swal.fire({
                icon: 'success',
                title: 'Done',
                text: '@TempData["AssignSuccess"]'
                });
                sessionStorage.setItem('sweetAlertAssignTaskShown', 'true');
            }
        });
    </script>
    @* Remove the message so it doesn’t persist on refresh *@
    TempData.Remove("AssignSuccess");

}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertAssignTaskShown');
    </script>
}
<p>
    @* <a asp-action="Create">Create New</a> | *@
    <p>
        <a class="btn btn-info" asp-area="" asp-controller="Event" asp-action="Details" asp-route-id=@eventID>View Event</a> 
        <a class="btn btn-info" asp-area="" asp-controller="Project" asp-action="Details" asp-route-id=@projectID>View Project</a>
        <a href="@Url.Action("ViewUnassignedVolunteers", new { eventID = eventID, eventName = eventName, projectID = projectID })" class="btn btn-info">Assign Volunteer</a>
        <a href="@Url.Action("ViewEventTasks", new { eventID = eventID, eventName = eventName, projectID = projectID })" class="btn btn-info">View All Tasks</a>

    </p>
</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th class="header">
                @Html.DisplayNameFor(model => model.GivenName)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.FamilyName)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.TaskName)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.TaskDescription)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.EventID)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.TaskID)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th class="header"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GivenName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDescription)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.EventID)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.TaskID)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-center gap-2">
                    <a href="@Url.Action("Edit", new { /* id=item.PrimaryKey */ })" class="btn btn-warning btn-sm">Edit</a>
                    <a href="@Url.Action("Details", new { /* id=item.PrimaryKey */ })" class="btn btn-warning btn-sm">Details</a>
                    <a href="@Url.Action("Delete", new { /* id=item.PrimaryKey */ })" class="btn btn-warning btn-sm">Details</a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

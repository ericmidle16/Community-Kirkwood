<!--
    /// <summary>
    /// Creator:  Stan Anderson
    /// Created:  2025-04-16
    /// Summary:  This shows all the volunteers in the project
                  that are not yet assigned a task.
    /// 
    /// Last Updated By: Skyann
    /// Last Updated: 2025-04-27
    /// What Was Changed: Styling added.
    /// </summary>
-->
@model IEnumerable<DataDomain.User>

@{
    ViewData["Title"] = "Volunteers Unassigned to Event";
    int eventID = ViewBag.EventID;
    string eventName = ViewBag.EventName;
    int projectID = ViewBag.ProjectID;
}

<h1 class="text-center"> Unassigned Volunteers for @eventName (@Model.Count())</h1>

<p>
    @* <a asp-action="Create">Create New</a> *@
</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th hidden>
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.GivenName)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.FamilyName)
            </th>
            <th hidden>
                @Html.DisplayNameFor(model => model.Biography)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th class="header"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td hidden>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GivenName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyName)
            </td>
            <td hidden>
                @Html.DisplayFor(modelItem => item.Biography)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-center gap-2">
                        <a href="@Url.Action("AssignTask", new { eventID = eventID, eventName = eventName, projectID = projectID, userID = item.UserID, userName = item.GivenName + " " + item.FamilyName })" class="btn btn-success btn-sm">Assign Task</a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

<!--
    /// <summary>
    /// Creator: Dat Tran
    /// Created: 2025-04-20
    /// Summary: View for viewing a user's profile
    ///
    /// Updated By: Skyann Heintz
    /// Updated: 2025-04-28
    /// What Was Changed: Styling was added
    ///
    /// Updated By: Dat Tran
    /// Updated: 2025-04-27
    /// What Was Changed: Sweet Alert implementation for muting and unmuting a user.
    ///

-->

@model DataDomain.User

@{
    ViewData["Title"] = "User Profile";

    var imgSrc = "";
    @if (Model.Image != null)
    {
        var base64 = Convert.ToBase64String(Model.Image);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
}
@* Removed by Josh N due to connection changes with the UpdateSkills *@
@* @if (TempData["SkillUpdate"] != null)  *@
@* {  *@
@*     <script>  *@
@*         document.addEventListener("DOMContentLoaded", function () {  *@

@*             if(!sessionStorage.getItem('sweetAlertSkillUpdateShown')){  *@
@*             Swal.fire({  *@
@*                 icon: 'success',  *@
@*                 title: 'Done',  *@
@*                 text: '@TempData["SkillUpdate"]'  *@
@*                 });  *@
@*                 sessionStorage.setItem('sweetAlertSkillUpdateShown', 'true');  *@
@*             }  *@
@*         });  *@
@*     </script>  *@
@*     @* Remove the message so it doesn’t persist on refresh *@ 
@*     TempData.Remove("SkillUpdate");  *@

@* }  *@
@* else  *@
@* {  *@
@*     <script>  *@
@*         // Ensure the flag is reset if there's no success message  *@
@*         sessionStorage.removeItem('sweetAlertSkillUpdateShown');  *@
@*     </script>  *@
@* }  *@

<div class="row">

	@if (imgSrc != null && imgSrc != "")
	{
        <div class="col" style="max-width: 120px; align-content: center;">
	    	<img src="@imgSrc" alt="profile picture" width="100" height="100" />
	    </div>
	}

    <div class="col">
		<h1>@Model.GivenName @Model.FamilyName's Profile</h1>
		<h4>@Model.Email</h4>
    </div>
</div>
<hr/>

<div>
    <div class="col-sm-10">
		@if (Model.Biography != null && Model.Biography != "")
		{
			<p>@Html.DisplayFor(model => model.Biography)</p>
		}
		else
		{
			<p class="text-muted">No biography given.</p>
		}
	</div>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt class = "col-sm-2">
            Location
        </dt>

        @if(Model.City != null && Model.State != null ){
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.City), @Html.DisplayFor(model => model.State)
            </dd>
        }
        else if (Model.City != null || Model.State != null)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.City) @Html.DisplayFor(model => model.State)
            </dd>
        }
        else{
            <dd class="col-sm-10">
                <p class="text-muted">No location given.</p>
            </dd>
        }
    </dl>
</div>
<div>
    @Html.ActionLink("View Skills", "Index", "Skill", new { id = Model.UserID }, new { @class = "btn btn-info" })
    @Html.ActionLink("View Donations", "ViewDonationHistory", "Donations", new { id = Model.UserID }, new { @class = "btn btn-info" })
    @Html.ActionLink("View Availability", "Availability", "Availability", new { id = Model.UserID }, new { @class = "btn btn-info" })
    @Html.ActionLink("View Vehicles", "Index", "Vehicle", new { id = Model.UserID }, new { @class = "btn btn-info" })
    @Html.ActionLink("View Projects", "IndexStartedProjects", "Project", new { id = Model.UserID }, new { @class = "btn btn-info" })
    @* @Html.ActionLink("Edit Profile", "Edit", new { id = Model.UserID }, new { @class = "btn btn-warning" }) *@
</div>


<!--
    /// <summary>
    /// Creator:  Syler Bushlack
    /// Created:  
    /// Summary:  
    ///
    /// Last Updated By: Kate Rich
    /// Last Updated: 2025-04-25
    /// What Was Changed:
    ///         Added an ActionLink so that whoever is viewing the volunteer requests can submit
    ///         a background check on applicants, if needed.
    ///
    /// Last Updated By: Skyann Heintz
    /// Last Updated: 2025-04-28
    /// What Was Changed:
    ///         Added styling
    ///
    /// Last Updated By: Dat Tran
    /// Last Updated: 2025-04-27
    /// What Was Changed: Added Sweet Alert for adding background checks.
    ///
    /// Last Updated By: Skyann Heintz
    /// Last Updated: 2025-04-30
    /// What Was Changed:
    ///         Adjusted button size to be small. Adjusted the colors as well.
    /// </summary>
-->

@model IEnumerable<DataDomain.VMVolunteerStatus>

@{
    ViewData["Title"] = "Index";
    int projectid = ViewBag.projectid;
}

<h1 class="text-center">Volunteer Requests</h1>
@if(TempData["StatusUpdate"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            if(!sessionStorage.getItem('sweetAlertVolunteerStatusShown')){
            Swal.fire({
                icon: 'success',
                title: 'Done',
                text: '@TempData["StatusUpdate"]'
                });
                sessionStorage.setItem('sweetAlertVolunteerStatusShown', 'true');
            }
        });
    </script>
    @* Remove the message so it doesn’t persist on refresh *@
    TempData.Remove("StatusUpdate");
}
else
{
    <script>
        // Ensure the flag is reset if there's no success message
        sessionStorage.removeItem('sweetAlertVolunteerStatusShown');
    </script>
}
<p>
    <a href="@Url.Action("Details", "Project", new { id = projectid })" class="btn btn-secondary">Back to Project</a>
    <a href="@Url.Action("ViewAllRejectedVolunteers", new { id = projectid })" class="btn btn-info">Rejected Volunteer Requests</a>

</p>
<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th class="header">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="header">
                @Html.DisplayNameFor(model => model.Approved)
            </th>
            <th class="header"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <div class="d-flex flex-wrap justify-content-center gap-2">
                    <a href="@Url.Action("UpdateVolunteerStatus", new { approved = true, userID = item.UserID, projectID = item.ProjectID })" class="btn btn-success btn-sm">Accept</a>
                    <a href="@Url.Action("UpdateVolunteerStatus", new { approved = false, userID = item.UserID, projectID = item.ProjectID })" class="btn btn-danger btn-sm">Reject</a>
                    <a href="@Url.Action("Create", "BackgroundCheck", new { userID = item.UserID, projectID = item.ProjectID })" class="btn btn-success btn-sm">Submit Background Check</a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>